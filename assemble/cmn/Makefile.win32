# Nmake macros for building Windows 32-Bit apps


!IF "$(DLL_SUPPORT)"=="YES"
TARGET_TYPE=DLL
cflags=$(cflags) /DCRYPTO_SHARED
!ELSE
cflags=$(cflags) 
!ENDIF


QUIET=N

DLL_NAME=$(LIB_HW)


            
# with the suffix rule, the object can be made from C or CPP source file
OBJS= \
    $(OBJDIR)\hdUtils.obj   \
    $(OBJDIR)\doRdtsc.obj   \
    $(OBJDIR)\cpuString.o   \
    $(OBJDIR)\cpuBrand.o   \
    $(OBJDIR)\asmParams.o   \


!include MakePre.mak


!if "$(TARGET_TYPE)"=="DLL"
DEST=$(DLL_NAME).dll
# RESES=$(OBJDIR)\cares.res
!else
DEST=$(DLL_NAME).lib
!endif    

# cvarsdll is only used for DLL, dll not dependent on CmnHdr.h
# UNICODE and _UNICODE must be defined both 

all: $(OBJDIR)  $(DEST)

$(OBJDIR) :
    if not exist "$(OBJDIR)/$(NULL)" mkdir $(OBJDIR)
    
# def file is not used
# /DEF:$(SRC_DIR)\dllMain.def 

#$(DEST): $(OBJS) 


$(DEST): $(OBJS) $(RESES)
!if "$(TARGET_TYPE)"=="DLL"
    $(link) $(dlllflags) /DEF:$(SRC_DIR)\dllMain.def  -out:$@ $** $(conlibsdll)
!if "$(QUIET)"=="N"
    dumpbin /exports $@
!endif    
!else
    $(link) -lib -out:$@ $** 
!endif    


#    mt -manifest $(OUTDIR)\Select.dll.manifest -outputresource:$(OUTDIR)\Select.dll;2


clean:
        $(CLEANUP)
